Referensi UI : Github
Big idea : Bookshelf apps dengan improvisasi
Rencana stack : React JS, Redux & Redux Toolkit, RTK Query, Firebase, & Data-data dari external API

- /, sementara dikosongkan
- /profile, referensi seperti github, sebelah kiri foto profile, username, dan bio, sebelah kanan daftar buku yang difavoritkan dan statistik data buku user
- /books, referensi seperti menu repo github, buat menu seperti yg sudah ada, beri tab untuk filter sudah dibaca, belum selesai dibaca, dan wishlist
- /books, untuk buku yg sudah selesai dibaca tampilkan link "Tulis deskripsi dan review",
- /article, untuk menulis artikel
- pada navbar, buat komponen search bar untuk mencari deskripsi dan review buku dari user lain, mirip seperti mencari repo dari orang lain
- tampilkan hasil di url /search?book=[value] atau cari by user /search?user=[value]
- /user/[id], untuk menampilkan profile orang lain
- /user/[id]/books, untuk menampilkan data buku yang dipublish
- /user/[id]/books/[id] untuk menampilkan detail buku dari user lain

{
  books: {
    user_id: { // list buku }
  },
  detail-books: {
    user_id : {
      book_id: { // detail }
    }
  }
}

1. Panggil data buku di level layout profile/showcase baru filter dan di tiap-tiap page
struktur data buku untuk list
{
  bookTitle, string, input
  writer, string, input
  yearPublished, number, input
  genre, string, input
  bookId, string, auto-generated,
  isDone, boolean, auto-generated // setiap kali menambah buku, secara default belum selesai dibaca
  isPublic, boolean, input
  createdAt, timestamp, auto-generated
  updatedAt, timestamp, auto-generated,
  isFavourite, boolean, input
  rating, number, input // setelah buku selesai
  deskripsi dan review, text, input // setelah buku selesai,
  isWishlist, booelan, input
}

2. Basic operations, tambah buku, edit buku, hapus buku, tandai selesai

3. Input untuk tambah buku (judul, penulis, genre, tahun terbit, publik)

4. Input untuk edit buku
>> ketika belum selesai (judul, penulis, genre, tahun terbit, publik, favorit)
>> ketika sudah selesai (judul, penulis, genre, tahun terbit, publik, favorit, deskripsi dan review, rating)

5. Aksi hapus dari wishlist, masukkan ke daftar buku atau hapus data seutuhnya

GET
Dispatch async action untuk ambil data buku di level layout profile dan mapping hasilnya dengan ambil nilai state `books`

ADD
Dispatch async action dan kirim payload berupa data buku baru. Atribut yang perlu di-input user antara lain title (text), writer (text), yearPublished (number | year), category (dropdown), isPublic (toggle | checkbox), isWishlist (toggle | checkbox)

untuk atribut yang auto-generated adalah id, isDone, isFavourite, isPinned, createdAt, updatedAt, rating, descAndReview

EDIT
Ambil data buku yang ingin diedit, lalu ganti beberapa field yang diinginkan user. Di halaman edit, ketika buku sudah berstatus selesai dibaca, tampilkan component untuk menambahkan rating dan descAndReview

DELETE
Just delete it

EDIT (mark done)
Dispatch async action untuk mengupdate data buku untuk atribut tertentu

